<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dnsdist on My technical gists</title><link>https://dmachard.github.io/tags/dnsdist/</link><description>Recent content in dnsdist on My technical gists</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 17 Aug 2023 00:00:00 +0100</lastBuildDate><atom:link href="https://dmachard.github.io/tags/dnsdist/index.xml" rel="self" type="application/rss+xml"/><item><title>Blacklist IP addresses with DNS UPDATE control and dynamic blocking duration with DNSdist</title><link>https://dmachard.github.io/posts/0052-dnsdist-ip-blacklisting/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0052-dnsdist-ip-blacklisting/</guid><description>A DNSdist configuration example to blacklist IP addresses with DNS UPDATE control and dynamic blocking duration.</description></item><item><title>Temporarily block domains with DNS notify with DNSdist</title><link>https://dmachard.github.io/posts/0051-dnsdist-blocklist-domains/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0051-dnsdist-blocklist-domains/</guid><description>A DNSdist configuration example to block or unblock domains temporarily and in a dynamic way with DNS notify.</description></item><item><title>DNS tunneling protection with DNSdist</title><link>https://dmachard.github.io/posts/0048-dnsdist-dns-tunneling-protection/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0048-dnsdist-dns-tunneling-protection/</guid><description>A DNSdist configuration example to attempt to block DNS tunnelling.</description></item><item><title>Echo capability of ip address from domain name for development with DNSdist</title><link>https://dmachard.github.io/posts/0049-dnsdist-echoip/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0049-dnsdist-echoip/</guid><description>A DNSdist configuration example to map any IP address to a hostname for development purpose.</description></item><item><title>Dynamic blacklist with CDB database on DNSdist</title><link>https://dmachard.github.io/posts/0046-dnsdist-blacklist/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0046-dnsdist-blacklist/</guid><description>A DNSdist configuration example to block big list of ads/malwares domains</description></item><item><title>PowerDNS/Dnsdist: custom config with LUA</title><link>https://dmachard.github.io/posts/0041-dnsdist-lua-hostname/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0041-dnsdist-lua-hostname/</guid><description>This post gives some examples of LUA code to modify the behavior of your dnsdist
Table of contents Resolve hostname Get hostnmae Resolve hostname This exemple enable to make dns resolution at startup.
local f = assert(io.popen(&amp;#39;getent hosts &amp;lt;YOURDNSNAME&amp;gt; | cut -d &amp;#34; &amp;#34; -f 1&amp;#39;, &amp;#39;r&amp;#39;)) local dnscollector = f:read(&amp;#39;*a&amp;#39;) or &amp;#34;127.0.0.1&amp;#34; f:close() dnscollector = string.gsub(dnscollector, &amp;#34;\n$&amp;#34;, &amp;#34;&amp;#34;) fstl = newFrameStreamTcpLogger(dnscollector.. &amp;#34;:6000&amp;#34;) Get hostname Example to get the hostname of your machine and reuse-it in your dnsdist config</description></item><item><title>PowerDns/dnsdist: route incoming UDP/TCP DNS queries to a pool of DoH servers</title><link>https://dmachard.github.io/posts/0011-powerdns-dnsdist-doh-servers/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0011-powerdns-dnsdist-doh-servers/</guid><description>The goal of this tutorial is to send all your local DNS queries (udp/tcp) to a pool of DoH public resolvers with dnsdist load balancer. A dns cache is also enabled to optimize the traffic. We also assume you have a docker environement to follow this tutorial.
Table of contents Prepare configuration Deploy dnsdist container Test DNS resolution Jinja configuration template Prepare configuration Before to start, install some useful python tools to prepare the configuration</description></item><item><title>PowerDns/dnsdist: how to send all your DNS queries to a pool of public resolvers</title><link>https://dmachard.github.io/posts/0009-powerdns-dnsdist-pool-resolvers/</link><pubDate>Tue, 28 Sep 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0009-powerdns-dnsdist-pool-resolvers/</guid><description>In this very basic example, the goal is to send all your local DNS queries (udp/tcp) to a pool of public resolvers (without encryption).
Table of contents Basic configuration Basic configuration dnsdist is configured to make a load balancing (round robin) between all public resolvers configured. A dns cache is enabled to optimize the traffic. We assume you have dnsdist 1.6 minimum installed on your machine.
Configuration: /etc/dnsdist/dnsdist.conf
--------------------------------------------------- -- Dns services --------------------------------------------------- -- udp/tcp dns listening setLocal(&amp;#34;0.</description></item><item><title>PowerDNS/dnsdist: how to configure TLS for outgoing dnstap stream using stunnel</title><link>https://dmachard.github.io/posts/0006-powerdns-dnsdist-dnstap-tls/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0006-powerdns-dnsdist-dnstap-tls/</guid><description>This post will detail how to wrap your outgoing dnstap stream with TLS using stunnel.
Table of contents Introduction Installation Configuration Systemd Introduction This tutorial assumes you have a working PowerDNS dnsdist server installed on a Centos/AlmaLinux with dnstap enabled. Also we will use the same user/group that dnsdist for stunnel. Any feedbacks will be appreciated to improve this tutorial.
Installation Install stunnel
yum install stunnel mkdir /var/run/stunnel chown dnsdist:dnsdist /var/run/stunnel Configuration Configure stunnel</description></item><item><title>PowerDNS/dnsdist: how to configure TLS for the API using stunnel</title><link>https://dmachard.github.io/posts/0005-powerdns-dnsdist-api-tls/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0005-powerdns-dnsdist-api-tls/</guid><description>This post will detail how to wrap your DnsDIST webserver/API and dnstap stream with TLS using stunnel.
Table of contents Purpose Installation Configuration Systemd Purpose This tutorial assumes you have a working PowerDNS dnsdist server installed on a Centos/AlmaLinux with webserver api. Also we will use the same user/group that dnsdist for stunnel. Any feedbacks will be appreciated to improve this tutorial.
Installation Install stunnel
yum install stunnel mkdir /var/run/stunnel chown dnsdist:dnsdist /var/run/stunnel Configuration Create a certificate.</description></item><item><title>PowerDNS/dnsdist: installation guide on CentOS 7</title><link>https://dmachard.github.io/posts/0020-powerdns-dnsdist-installation/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0020-powerdns-dnsdist-installation/</guid><description>Table of contents Installation Configuration Start Firewalld configuration Installation Activate EPEL repo
yum install -y epel-release Install dependencies
yum install re2 net-snmp.x86_64 lmdb.x86_64 fstrm.x86_64 yum install protobuf.x86_64 tinycdb.x86_64 libsodium.x86_64 luajit.x86_64 openssl yum install gnutls tinycdb Download from the last version available https://repo.powerdns.com/centos/x86_64/7/
rpm -ivh dnsdist-1.4.0-1pdns.el7.rpm Configuration vim /etc/dnsdist/dnsdist.conf
-- bind on ip any setLocal(&amp;#39;0.0.0.0:53&amp;#39;) -- allow all IP access setACL({&amp;#39;0.0.0.0/0&amp;#39;}) -- start the web server on port 8080 webserver(&amp;#34;0.0.0.0:8080&amp;#34;, &amp;#34;key&amp;#34;) -- disable security feature polling setSecurityPollSuffix(&amp;#39;&amp;#39;) -- log incoming request addAction(AllRule(), LogAction(&amp;#34;/var/log/dnsdist.</description></item></channel></rss>