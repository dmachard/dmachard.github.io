<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>grafana on My technical gists</title><link>https://dmachard.github.io/tags/grafana/</link><description>Recent content in grafana on My technical gists</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 16 Dec 2021 00:00:00 +0100</lastBuildDate><atom:link href="https://dmachard.github.io/tags/grafana/index.xml" rel="self" type="application/rss+xml"/><item><title>DnsCollector/dnstap: collect dnstap stream and analysing logs with Loki+Grafana</title><link>https://dmachard.github.io/posts/0044-dnscollector-grafana-loki/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0044-dnscollector-grafana-loki/</guid><description>Example to collect dnstap stream and analysing logs with Loki+Grafana
Table of contents Prequisites Overview Configuration Dashboard Prequisites Install the dnscollector like described in the following guide.
Overview With this example the collector waits incoming dnstap messages sent by your dns server, then you can watch and analysing logs on your Grafana dashboard.
Configuration Download the config.yml file.
global: trace: verbose: true multiplexer: collectors: - name: tap dnstap: listen-ip: 0.0.0.0 listen-port: 6000 tls-support: true cert-file: &amp;#34;/etc/dnscollector/dnscollector.</description></item><item><title>Prometheus: monitor dns records with blackbox exporter</title><link>https://dmachard.github.io/posts/0043-blackbox-prometheus-dns/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0043-blackbox-prometheus-dns/</guid><description>Example to monitor DNS records with the blackbox exporter
Table of contents Blackbox Prometheus Grafana Blackbox Configuration blackbox.yml
modules: www.google.com: prober: dns timeout: 5s dns: transport_protocol: &amp;#34;udp&amp;#34; preferred_ip_protocol: &amp;#34;ip4&amp;#34; query_name: &amp;#34;www.google.com&amp;#34; query_type: &amp;#34;A&amp;#34; valid_rcodes: - NOERROR www.microsoft.com: prober: dns timeout: 5s dns: transport_protocol: &amp;#34;udp&amp;#34; preferred_ip_protocol: &amp;#34;ip4&amp;#34; query_name: &amp;#34;www.microsoft.com&amp;#34; query_type: &amp;#34;A&amp;#34; valid_rcodes: - NOERROR Reload the blackbox config
curl -X POST http://&amp;lt;ip_blackbox&amp;gt;:9115/-/reload Prometheus - job_name: &amp;#39;blackbox-dns-monitor&amp;#39; scrape_interval: 5s metrics_path: /probe relabel_configs: # Populate domain label with domain portion of __address__ - source_labels: [__address__] regex: (.</description></item><item><title>DnsCollector/dnstap: collect dnstap stream and get statistics usage</title><link>https://dmachard.github.io/posts/0035-dnscollector-grafana-prometheus/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0035-dnscollector-grafana-prometheus/</guid><description>Example to collect dnstap stream and get statistics usage
Table of contents Prequisites Overview Configuration Dashboard Prequisites Install the dnscollector like described in the following guide.
Overview With this example the collector waits incoming dnstap messages sent by your dns server, then you can watch statistics and metrics on your Grafana dashboard.
Configuration Download the config.yml file.
global: trace: verbose: true multiplexer: collectors: - name: tap_tls dnstap: listen-ip: 0.0.0.0 listen-port: 6000 tls-support: true cert-file: &amp;#34;/etc/dnscollector/dnscollector.</description></item></channel></rss>