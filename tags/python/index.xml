<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on My technical gists</title><link>https://dmachard.github.io/tags/python/</link><description>Recent content in python on My technical gists</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 22 Jul 2023 01:00:00 +0100</lastBuildDate><atom:link href="https://dmachard.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Module to get your V4/V6 public IP from random providers in several ways (DNS, HTTPS or STUN)</title><link>https://dmachard.github.io/posts/0050-python-publicaddr/</link><pubDate>Sat, 22 Jul 2023 01:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0050-python-publicaddr/</guid><description>Simple python module for getting your public IP V4 and V6 from several providers in random mode with also several protocols (DNS, HTTPS and STUN).
Source code available in github under MIT licence.
The following providers are supported:
Google (DNS &amp;amp; HTTP &amp;amp; STUN) Cloudflare (DNS &amp;amp; HTTP) OpenDNS (DNS) Akamai (DNS &amp;amp; HTTP) Ipify (HTTP) Icanhazip (HTTP) Matrix (STUN) Framasoft (STUN) Installation This module can be installed from pypi website</description></item><item><title>Client en Python pour la banque Crédit Agricole</title><link>https://dmachard.github.io/posts/0008-creditagricole-client-python/</link><pubDate>Mon, 27 Sep 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0008-creditagricole-client-python/</guid><description>Le client Python est à destination des particuliers souhaitant récupérer ses opérations bancaires stockées par le Crédit Agricole.
Sommaire Introduction Installation Exemple Introduction Ce client Python permet de:
lister l&amp;rsquo;ensemble des comptes bancaires associés au compte récupérer le solde total récupérer la liste des opérations au format JSON Installation Le module python creditagricole-particuliers disponible sur pypi
pip install creditagricole-particuliers Exemple Code pour calculer le solde total de l&amp;rsquo;ensemble des comptes.</description></item><item><title>Exemple de développement d'une API REST avec pycnic</title><link>https://dmachard.github.io/posts/0031-pycnic-api-python/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0031-pycnic-api-python/</guid><description>Exemple de développement d&amp;rsquo;une API avec la librairie Python pycnic
Installation de la librarie
pip install pycnic Exemple simple d&amp;rsquo;une API serveur:
from pycnic.core import WSGI, Handler from pycnic.errors import HTTP_401, HTTP_400, HTTP_500, HTTP_403, HTTP_404 from wsgiref.simple_server import make_server, WSGIServer from SocketServer import ThreadingMixIn class HandlerCors(Handler): def options(self): return {} class HelloWorld(HandlerCors): def post(self): return { &amp;#34;msg&amp;#34;: &amp;#34;success&amp;#34; } class app(WSGI): headers = [ (&amp;#34;Access-Control-Allow-Origin&amp;#34;, &amp;#34;*&amp;#34;), (&amp;#34;Access-Control-Allow-Method&amp;#34;, &amp;#34;*&amp;#34;), (&amp;#34;Access-Control-Allow-Headers&amp;#34;, &amp;#34;content-type, authorization&amp;#34;), ] routes = [ (&amp;#39;/helloworld&amp;#39;, HelloWorld()) ] class ThreadingWSGIServer(ThreadingMixIn, WSGIServer): daemon_threads = True class Server: def __init__(self, wsgi_app, listen=&amp;#39;127.</description></item></channel></rss>