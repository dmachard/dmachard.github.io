<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on My technical gists</title><link>https://dmachard.github.io/tags/security/</link><description>Recent content in security on My technical gists</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 28 Aug 2023 00:00:00 +0100</lastBuildDate><atom:link href="https://dmachard.github.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>CoreDNS: secure your DNSTAP streams with TLS</title><link>https://dmachard.github.io/posts/0053-coredns-dnstap-tls/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0053-coredns-dnstap-tls/</guid><description>This post explains how to enable TLS on outgoing dnstap streams with CoreDNS. Please refer to How to enable it on main dns servers to enable DNStap in basic way.
TLS is supported since the version 1.11
Enable Secure DNSTAP with CoreDNS Create working folder
mkdir securednstap cd securednstap Create the following config_coredns.conf in your working folder.
tls:// to use TLS 192.168.1.200:6000 is the IP/port address of your DNStap collector. skipverify: this setting ignore TLS verification, do not use this settings in production.</description></item><item><title>PowerDNS DNSdist: blacklist IP addresses with DNS UPDATE control and dynamic blocking duration</title><link>https://dmachard.github.io/posts/0052-dnsdist-ip-blacklisting/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0052-dnsdist-ip-blacklisting/</guid><description>A DNSdist configuration example to blacklist IP addresses with DNS UPDATE control and dynamic blocking duration. This example is volatible, dnsdist will restart with an empty blocklist of IP addresses.
dnsdist 1.8 minimum is required for this example.
DNSdist configuration In the following example, DNSdist will forward all incoming queries to 1.1.1.1 by default. Before that, two actions are defined
the first one to intercept all DNS update to blockip.local.dev. the second one to blacklist IP in limited time.</description></item><item><title>PowerDNS DNSdist: temporarily block domains with DNS notify</title><link>https://dmachard.github.io/posts/0051-dnsdist-blocklist-domains/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0051-dnsdist-blocklist-domains/</guid><description>A DNSdist configuration example to block or unblock domains temporarily and in a dynamic way with DNS notify. This example is volatible, a restart of the dnsdist will erase the blocklist. If you want to keep the blocklist even after restart, you can refer to the post blackhole/spoofing domains with external files
DNSdist configuration In the following example, DNSdist will forward all incoming queries to 1.1.1.1 by default. Before that, an action is defined to check if the domain must be refused or not.</description></item><item><title>PowerDNS DNSdist: dns tunneling protection</title><link>https://dmachard.github.io/posts/0048-dnsdist-dns-tunneling-protection/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0048-dnsdist-dns-tunneling-protection/</guid><description>A DNSdist configuration example to attempt to block DNS tunnelling.
The global approach is to blacklist IP when some malicious behaviour are detected:
Uncommon DNS Qtype like NULL, PRIVATE are blocked A generic regex to block long successive DNS label with whitelist to avoid false-positive Apply some rate limitations per IP The latest version of the configuration can be downloaded from github.
-- Generic rules to block malicious dns traffic like DNS tunneling -- remote security events logger based on dnstap security_dnstap_logger = newFrameStreamTcpLogger(&amp;#34;10.</description></item><item><title>DNS Tunneling: tools overview</title><link>https://dmachard.github.io/posts/0047-dns-tunneling-overview/</link><pubDate>Tue, 04 Jul 2023 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0047-dns-tunneling-overview/</guid><description>This post is an overview of some dns tunnneling tools with installation procedure.
Table of contents What is DNS tunneling? Tools overview iodine dnscat2 dns2tcp DNSExfiltrator Sods Other tools What is DNS tunneling? DNS tunneling exploits DNS protocol for tunneling data via DNS query and response packet.
It can be used to extract or import data silently from a corporate network.
Tools overview Iodine Tunnel IPv4 data over DNS
Github URL: https://github.</description></item><item><title>How to manage Linux permissions for users, groups, and others</title><link>https://dmachard.github.io/posts/0036-linux-permissions-file/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0100</pubDate><guid>https://dmachard.github.io/posts/0036-linux-permissions-file/</guid><description>How to manage Linux permissions for users, groups and others
Table of contents Access level Identity Chmod and Chown Access level Display file permission
$ ls -alrt total 1 -rwxrwxr--. 1 ansible automation 4 Nov 13 10:57 helloworld.txt r = read = 4 w = write = 2 x = execute = 1 Identity $ ll total 1 -rwxrwxr--. 1 ansible automation 4 Nov 13 10:57 helloworld.txt [ user = u ] [ group = g ] [ others = o ]</description></item></channel></rss>